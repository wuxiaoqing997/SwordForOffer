/* function TreeNode(x) {
    this.val = x;
    this.left = null;
    this.right = null;
} */
function IsBalanced_Solution(pRoot) {
  if (pRoot == null) {
    return true
  }
  var left = TreeDepth(pRoot.left)
  var right = TreeDepth(pRoot.right)
 
  if (Math.abs(left - right) <= 1) {
    return true
  }
}
function TreeDepth(pRoot)
{
  if (pRoot == null) {
    return 0
  }
  return Math.max(TreeDepth(pRoot.left),TreeDepth(pRoot.right)) + 1
}
